{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$defs": {
    "subchart": {
      "additionalProperties": {
        "properties": {
          "chart": {
            "type": "string",
            "enum": [
              "milvus",
              "mongodb",
              "mysql",
              "nats",
              "neo4j",
              "opensearch",
              "postgresql",
              "postgresql-ha",
              "rabbitmq",
              "redis",
              "redis-cluster"
            ]
          },
          "chartUrl": {
            "const": "registry.gamewarden.io/charts",
            "default": "registry.gamewarden.io/charts",
            "type": "string"
          },
          "enabled": {
            "default": true,
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "project": {
            "type": "string"
          },
          "serverSideApply": {
            "type": "boolean"
          },
          "sync": {
            "default": true,
            "type": "boolean"
          },
          "valueFiles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "values": {
            "type": "object"
          },
          "valuesRepo": {
            "type": "string"
          },
          "wave": {
            "type": "string"
          }
        },
        "description": "Included additional helm charts to install.",
        "required": ["revision"],
        "additionalProperties": false,
        "type": "object"
      },
      "required": [],
      "type": "object"
    },
    "microservice": {
      "additionalProperties": {
        "properties": {
          "annotations": {
            "description": "Add resource annotations.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "args": {
            "description": "Override startup command arguments for container.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "command": {
            "items": {
              "type": "string"
            },
            "description": "Override startup command for container.",
            "type": "array"
          },
          "config": {
            "description": "See example: https://github.com/second-front/uchart/blob/main/docs/Example-Microservices.md?plain=1#L74-L82",
            "properties": {
              "data": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "containers": {
            "description": "For creating a multi-containered pod: ",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "annotations": {
                "description": "Add resource annotations.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "args": {
                "description": "Override startup command arguments for container.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "command": {
                "items": {
                  "type": "string"
                },
                "description": "Override startup command for container.",
                "type": "array"
              },
              "config": {
                "description": "See example: https://github.com/second-front/uchart/blob/main/docs/Example-Microservices.md?plain=1#L74-L82",
                "properties": {
                  "data": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "envFrom": {
                "items": {
                  "properties": {
                    "configMapRef": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "secretRef": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalProperties": false,
                  "type": "object"
                },
                "description": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#configure-all-key-value-pairs-in-a-configmap-as-container-environment-variables",
                "type": "array"
              },
              "envs": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object",
                "description": "Key value pair for environment variables: https://github.com/second-front/uchart/blob/main/docs/Example-Microservices.md?plain=1#L49-L51"
              },
              "extraEnvs": {
                "description": "See example: https://github.com/second-front/uchart/blob/main/docs/Example-Microservices.md?plain=1#L54-L65",
                "items": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "valueFrom": {
                      "properties": {
                        "configMapKeyRef": {
                          "additionalProperties": false,
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "secretKeyRef": {
                          "additionalProperties": false,
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "required": ["name"]
                },
                "type": "array"
              },
              "initContainers": {
                "description": "See documentation: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": ["name"],
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              },
              "labels": {
                "description": "Add resource labels to microservice.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "livenessProbe": {
                "description": "See documentation: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
                "properties": {
                  "failureThreshold": {
                    "description": "Number of failed checks to consider the liveness check failed.",
                    "type": "integer"
                  },
                  "initialDelaySeconds": {
                    "description": "Amount of seconds to send the first probe.",
                    "type": "integer"
                  },
                  "periodSeconds": {
                    "description": "How often the probe checks for liveness.",
                    "type": "integer"
                  },
                  "successThreshold": {
                    "description": "Minimum successful attempts needed to be deemed alive.",
                    "type": "integer"
                  },
                  "timeoutSeconds": {
                    "description": "Number of seconds after which a probe times out.",
                    "type": "integer"
                  },
                  "tcpSocket": {
                    "properties": {
                      "port": {
                        "type": "integer"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "httpGet": {
                    "properties": {
                      "path": {
                        "type": "string"
                      },
                      "port": {
                        "type": "integer"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  }
                },
                "additionalProperties": false,
                "type": "object"
              },
              "readinessProbe": {
                "description": "See documentation: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
                "properties": {
                  "failureThreshold": {
                    "description": "Number of failed checks to consider the liveness check failed.",
                    "type": "integer"
                  },
                  "initialDelaySeconds": {
                    "description": "Amount of seconds to send the first probe.",
                    "type": "integer"
                  },
                  "periodSeconds": {
                    "description": "How often the probe checks for liveness.",
                    "type": "integer"
                  },
                  "successThreshold": {
                    "description": "Minimum successful attempts needed to be deemed alive.",
                    "type": "integer"
                  },
                  "tcpSocket": {
                    "properties": {
                      "port": {
                        "type": "integer"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "timeoutSeconds": {
                    "description": "Number of seconds after which a probe times out.",
                    "type": "integer"
                  }
                },
                "additionalProperties": false,
                "type": "object"
              },
              "resources": {
                "description": "See documentation: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                "properties": {
                  "limits": {
                    "properties": {
                      "cpu": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "requests": {
                    "properties": {
                      "cpu": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  }
                },
                "additionalProperties": false,
                "type": "object"
              },
              "securityContext": {
                "description": "Set security context for container: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "runAsUser": {
                    "description": "UID of container to run as user.",
                    "type": "integer",
                    "pattern": "^(?!0$)[0-9]+$"
                  },
                  "runAsGroup": {
                    "description": "GID of container to run as group.",
                    "type": "integer",
                    "pattern": "^(?!0$)[0-9]+$"
                  }
                }
              },
              "selectorLabels": {
                "description": "Add selector labels to microservice.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "service": {
                "description": "See documentation: https://kubernetes.io/docs/concepts/services-networking/service/",
                "properties": {
                  "additionalPorts": {
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "port": {
                          "type": "integer"
                        },
                        "protocol": {
                          "type": "string"
                        },
                        "targetPort": {
                          "type": "integer"
                        },
                        "appProtocol": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": ["name", "port", "protocol", "targetPort"],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "port": {
                    "type": "integer"
                  },
                  "targetPort": {
                    "type": "integer"
                  },
                  "appProtocol": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "type": "object"
              },
              "topologySpreadConstraints": {
                "description": "See documentation: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/",
                "items": {
                  "properties": {
                    "labelSelector": {
                      "properties": {
                        "matchLabels": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "type": "object"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object"
                    },
                    "maxSkew": {
                      "type": "integer"
                    },
                    "topologyKey": {
                      "type": "string"
                    },
                    "whenUnsatisfiable": {
                      "type": "string"
                    },
                    "matchLabelKeys": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object"
                },
                "type": "array"
              },
              "volumeMounts": {
                "description": "See documentation: https://kubernetes.io/docs/concepts/storage/volumes/",
                "items": {
                  "properties": {
                    "readOnly": {
                      "type": "boolean"
                    },
                    "subPath": {
                      "type": "string"
                    },
                    "mountPath": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "mountPropagation": {
                      "type": "string"
                    },
                    "subPathExpr": {
                      "type": "string"
                    }
                  },
                  "required": ["mountPath", "name"],
                  "additionalProperties": false,
                  "type": "object"
                },
                "type": "array"
              }
            }
          },
          "cronjob": {
            "description": "Add kubernetes cronjobs: https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "backoffLimit": {
                "description": "https://kubernetes.io/docs/concepts/workloads/controllers/job/#pod-backoff-failure-policy",
                "type": "integer"
              },
              "completions": {
                "description": "https://kubernetes.io/docs/concepts/workloads/controllers/job/#completion-mode",
                "type": "integer"
              },
              "concurrencyPolicy": {
                "description": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#concurrency-policy",
                "type": "string"
              },
              "enabled": {
                "description": "Turn on or off the creation of the cronjob.",
                "type": "boolean"
              },
              "failedJobsHistoryLimit": {
                "description": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#jobs-history-limits",
                "type": "integer"
              },
              "parallelism": {
                "description": "https://kubernetes.io/docs/concepts/workloads/controllers/job/#parallel-jobs",
                "type": "integer"
              },
              "schedule": {
                "description": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#schedule-syntax",
                "type": "string"
              },
              "successfulJobsHistoryLimit": {
                "description": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#jobs-history-limits",
                "type": "integer"
              },
              "suspended": {
                "description": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#schedule-suspension",
                "type": "boolean"
              }
            }
          },
          "envFrom": {
            "items": {
              "properties": {
                "configMapRef": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "secretRef": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "description": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#configure-all-key-value-pairs-in-a-configmap-as-container-environment-variables",
            "type": "array"
          },
          "envs": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "description": "Key value pair for environment variables: https://github.com/second-front/uchart/blob/main/docs/Example-Microservices.md?plain=1#L49-L51"
          },
          "extraEnvs": {
            "description": "See example: https://github.com/second-front/uchart/blob/main/docs/Example-Microservices.md?plain=1#L54-L65",
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "valueFrom": {
                  "properties": {
                    "configMapKeyRef": {
                      "additionalProperties": false,
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "secretKeyRef": {
                      "additionalProperties": false,
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "required": ["name"]
            },
            "type": "array"
          },
          "initContainer": {
            "description": "See documentation: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
            "type": "array",
            "items": {
              "type": "object",
              "required": ["name", "image"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                }
              }
            }
          },
          "job": {
            "description": "See documentation: https://kubernetes.io/docs/concepts/workloads/controllers/job/",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "restartPolicy": {
                "type": "string"
              },
              "backoffLimit": {
                "type": "integer"
              },
              "completions": {
                "type": "integer"
              },
              "parallelism": {
                "type": "integer"
              }
            }
          },
          "labels": {
            "description": "Add resource labels to microservice.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "livenessProbe": {
            "description": "See documentation: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
            "properties": {
              "failureThreshold": {
                "description": "Number of failed checks to consider the liveness check failed.",
                "type": "integer"
              },
              "initialDelaySeconds": {
                "description": "Amount of seconds to send the first probe.",
                "type": "integer"
              },
              "periodSeconds": {
                "description": "How often the probe checks for liveness.",
                "type": "integer"
              },
              "successThreshold": {
                "description": "Minimum successful attempts needed to be deemed alive.",
                "type": "integer"
              },
              "timeoutSeconds": {
                "description": "Number of seconds after which a probe times out.",
                "type": "integer"
              },
              "tcpSocket": {
                "properties": {
                  "port": {
                    "type": "integer"
                  }
                },
                "additionalProperties": false,
                "type": "object"
              },
              "httpGet": {
                "properties": {
                  "path": {
                    "type": "string"
                  },
                  "port": {
                    "type": "integer"
                  }
                },
                "additionalProperties": false,
                "type": "object"
              }
            },
            "additionalProperties": false,
            "type": "object"
          },
          "podSecurityContext": {
            "description": "Set security context for pod: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "runAsUser": {
                "description": "UID of container to run as user.",
                "type": "integer",
                "pattern": "^(?!0$)[0-9]+$"
              },
              "runAsGroup": {
                "description": "GID of container to run as group.",
                "type": "integer",
                "pattern": "^(?!0$)[0-9]+$"
              }
            }
          },
          "readinessProbe": {
            "description": "See documentation: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
            "properties": {
              "failureThreshold": {
                "description": "Number of failed checks to consider the liveness check failed.",
                "type": "integer"
              },
              "initialDelaySeconds": {
                "description": "Amount of seconds to send the first probe.",
                "type": "integer"
              },
              "periodSeconds": {
                "description": "How often the probe checks for liveness.",
                "type": "integer"
              },
              "successThreshold": {
                "description": "Minimum successful attempts needed to be deemed alive.",
                "type": "integer"
              },
              "tcpSocket": {
                "properties": {
                  "port": {
                    "type": "integer"
                  }
                },
                "additionalProperties": false,
                "type": "object"
              },
              "timeoutSeconds": {
                "description": "Number of seconds after which a probe times out.",
                "type": "integer"
              }
            },
            "additionalProperties": false,
            "type": "object"
          },
          "resources": {
            "description": "See documentation: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
            "properties": {
              "limits": {
                "properties": {
                  "cpu": {
                    "type": "string"
                  },
                  "memory": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "type": "object"
              },
              "requests": {
                "properties": {
                  "cpu": {
                    "type": "string"
                  },
                  "memory": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "type": "object"
              }
            },
            "additionalProperties": false,
            "type": "object"
          },
          "securityContext": {
            "description": "Set security context for container: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "runAsUser": {
                "description": "UID of container to run as user.",
                "type": "integer",
                "pattern": "^(?!0$)[0-9]+$"
              },
              "runAsGroup": {
                "description": "GID of container to run as group.",
                "type": "integer",
                "pattern": "^(?!0$)[0-9]+$"
              }
            }
          },
          "selectorLabels": {
            "description": "Add selector labels to microservice.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "service": {
            "description": "See documentation: https://kubernetes.io/docs/concepts/services-networking/service/",
            "properties": {
              "additionalPorts": {
                "items": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "protocol": {
                      "type": "string"
                    },
                    "targetPort": {
                      "type": "integer"
                    },
                    "appProtocol": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["name", "port", "protocol", "targetPort"],
                  "type": "object"
                },
                "type": "array"
              },
              "port": {
                "type": "integer"
              },
              "targetPort": {
                "type": "integer"
              },
              "appProtocol": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "type": "object"
          },
          "statefulset": {
            "description": "Make microservice statefulset instead of a deployment.",
            "type": "object",
            "additionalProperties": false,
            "required": ["enabled"],
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            }
          },
          "topologySpreadConstraints": {
            "description": "See documentation: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/",
            "items": {
              "properties": {
                "labelSelector": {
                  "properties": {
                    "matchLabels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object"
                },
                "maxSkew": {
                  "type": "integer"
                },
                "topologyKey": {
                  "type": "string"
                },
                "whenUnsatisfiable": {
                  "type": "string"
                },
                "matchLabelKeys": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "type": "array"
          },
          "volumeMounts": {
            "description": "See documentation: https://kubernetes.io/docs/concepts/storage/volumes/",
            "items": {
              "properties": {
                "readOnly": {
                  "type": "boolean"
                },
                "subPath": {
                  "type": "string"
                },
                "mountPath": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "mountPropagation": {
                  "type": "string"
                },
                "subPathExpr": {
                  "type": "string"
                }
              },
              "required": ["mountPath", "name"],
              "additionalProperties": false,
              "type": "object"
            },
            "type": "array"
          },
          "volumes": {
            "description": "See documentation: https://kubernetes.io/docs/concepts/storage/volumes/",
            "items": {
              "properties": {
                "configMap": {
                  "properties": {
                    "items": {
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "path": {
                            "type": "string"
                          }
                        },
                        "required": ["key", "path"],
                        "additionalProperties": false,
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": ["name"],
                  "additionalProperties": false,
                  "type": "object"
                },
                "name": {
                  "type": "string"
                },
                "image": {
                  "properties": {
                    "reference": {
                      "type": "string"
                    },
                    "pullPolicy": {
                      "type": "string"
                    }
                  },
                  "required": ["reference"],
                  "type": "object",
                  "additionalProperties": false
                },
                "persistentVolumeClaim": {
                  "type": "object",
                  "required": ["claimName"],
                  "additionalProperties": false,
                  "properties": {
                    "claimName": {
                      "type": "string"
                    }
                  }
                },
                "secret": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "secretName": {
                      "type": "string"
                    },
                    "optional": {
                      "type": "boolean"
                    }
                  },
                  "required": ["secretName"]
                },
                "emptyDir": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "sizeLimit": {
                      "type": "string"
                    },
                    "medium": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": ["name"],
              "additionalProperties": false,
              "type": "object"
            },
            "type": "array"
          }
        },
        "additionalProperties": false,
        "type": "object"
      },
      "required": [],
      "type": "object"
    }
  },
  "properties": {
    "microservices": {
      "$ref": "#/$defs/microservice",
      "required": [],
      "title": "microservices",
      "type": "object"
    },
    "subCharts": {
      "$ref": "#/$defs/subchart",
      "required": [],
      "title": "subCharts",
      "type": "object"
    }
  },
  "additionalProperties": false,
  "required": [],
  "type": "object"
}
