{{- if or (.Values.argocd.wrapperAppOff) ( not .Values.subCharts )}}
{{- range $msvc, $v := .Values.microservices}}
{{- with $ -}}

{{- if not (empty $v) }}

{{- if $v.cronjob }}
{{- if ($v.cronjob).enabled }}

{{/* Variables */}}
{{- $annotations := $v.annotations | default (dict) }}
{{- $labels := $v.labels }}
{{- $completions := $v.cronjob.completions | default 1 }}
{{- $namespace := $v.namespace | default .Release.Namespace }}
{{- $parallelism := $v.cronjob.parallelism | default 1 }}

{{- $mergedEnvFrom := $v.envFrom | default (list) }}
{{- $defaultsEnvFrom := .Values.defaults.envFrom | default (list) }}
{{- range $defaultsEnvFrom }}
  {{- $mergedEnvFrom = append $mergedEnvFrom . }}
{{- end }}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ $msvc }}
  namespace: {{ $namespace }}
  labels:
    app: {{ $msvc }}
    {{- include "universal-app-chart.labels" . | nindent 4 }}
    {{- if $labels -}} {{- toYaml $labels | nindent 4 }} {{- end }}
  {{- if $annotations }}
  annotations:
    {{- toYaml $annotations | nindent 4 }}
  {{- end }}
spec:
  schedule: "{{ default "*/5 * * * *" $v.cronjob.schedule }}"
  concurrencyPolicy: "{{ default "Forbid" $v.cronjob.concurrencyPolicy }}"
  successfulJobsHistoryLimit: {{ default 3 $v.cronjob.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ default 1 $v.cronjob.failedJobsHistoryLimit }}
  suspend: {{ default false $v.cronjob.suspended }}
  jobTemplate:
    spec:
      backoffLimit: {{ $v.cronjob.backoffLimit | default 4 }}
      completions: {{ $completions }}
      parallelism: {{ $parallelism }}
      template:
        {{- include "podTemplate" (dict "msvc" $msvc "image" $v.image "Values" .Values "global" $ "v" $v) | nindent 8 }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
