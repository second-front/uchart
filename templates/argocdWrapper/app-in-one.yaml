{{- $defaultProject := printf "%s-%s-%s" (required "customerName is required" .Values.global.customerName) (required "environment is required" .Values.global.environment) (required "applicationName is required" .Values.global.applicationName) -}}
{{- if and .Values.subCharts .Values.microservices .Values.argocd.wrapAll }}
{{- $appName := .Values.argocd.wrapAllNameOverride | default (printf "%s-%s-%s" .Values.global.customerName .Values.global.environment .Values.global.applicationName ) -}}
---
kind: Application
apiVersion: argoproj.io/v1alpha1
metadata:
  name: {{ $appName }}
  namespace: argocd
{{-  if .Values.argocd.wrapperAppWave }}
  annotations:
    argocd.argoproj.io/sync-wave: {{ .Values.argocd.wrapperAppWave }}
{{- end }}
spec:
  project: "{{ default (printf "%s-%s-%s" .Values.global.customerName .Values.global.environment .Values.global.applicationName) .Values.argocd.projectOverride }}"
  destination:
    namespace: {{ .Values.argocd.namespace | default .Values.global.applicationName }}
    name: {{ .Values.global.destinationCluster }}
  syncPolicy:
    {{- if .Values.argocd.wrapperSync }}
    automated:
      prune: true
      selfHeal: true
    {{- end }}
    syncOptions:
      - CreateNamespace=true
      - Validate=false
      - RespectIgnoreDifferences=true
    {{- if not (eq .Values.argocd.serverSideApply false) }}
      - ServerSideApply=true
    {{- end }}
    managedNamespaceMetadata:
      labels:
        istio-injection: enabled
  revisionHistoryLimit: 3
  sources:
    - repoURL: registry.gamewarden.io/charts
      targetRevision: 1.0.38
      chart: uchart
      helm:
        values: |
          microservices:
          {{- toYaml  .Values.microservices | nindent 12 }}
          global:
          {{- toYaml  .Values.global | nindent 12 }}
          defaults:
          {{- toYaml  .Values.defaults | nindent 12 }}
          ciliumNetworkPolicies:
          {{- toYaml  .Values.ciliumNetworkPolicies | nindent 12 }}
          ciliumNetworkPolicies:
          {{- toYaml  .Values.networkPolicies | nindent 12 }}
          argocd:
          {{- toYaml  .Values.argocd | nindent 12 }}
          config:
          {{- toYaml  .Values.config | nindent 12 }}
          generatedSecrets:
          {{- toYaml  .Values.generatedSecrets | nindent 12 }}
          extraManifests:
          {{- toYaml  .Values.extraManifests | nindent 12 }}
          manifests:
          {{- toYaml  .Values.manifests | nindent 12 }}
          secretsJobGeneration:
          {{- toYaml  .Values.secretsJobGeneration | nindent 12 }}
{{- range $subChart, $v := .Values.subCharts}}
{{- with $ -}}
{{ if not (empty $v) -}}
{{ if not (eq $v.enabled false) -}}

{{/* Variables */}}
{{- $name := $v.name | default $subChart -}}
{{- $chartUrl := $v.chartUrl | default "registry.gamewarden.io/charts" -}}
{{- $namespace := $v.namespace | default .Values.global.applicationName -}}
{{- $revision := $v.revision | default $.Chart.Version }}
    - repoURL: {{ $chartUrl }}
      targetRevision: {{ $revision }}
      chart: {{ $v.chart | default "uchart" }}
      helm:
        {{-  if $v.values }}
        {{- $globalValues := dict 
        "applicationName" $namespace
        "customerName" .Values.global.customerName
        "impactLevel" .Values.global.impactLevel
        "environment" .Values.global.environment
        "image" (dict 
            "defaultImageRepository" .Values.global.image.defaultImageRepository
            "defaultImageRegistry" .Values.global.image.defaultImageRegistry
        )
        }}
        {{- $mergedGlobal := merge $globalValues (default dict $v.values.global) }}
        values: |
          {{- toYaml (merge $v.values (dict "global" $mergedGlobal)) | nindent 10 }}
          {{- if .Values.argocd.projectOverride }}
          argocd:
            projectOverride: {{ .Values.argocd.projectOverride }}
          {{- end }}
        {{- end }}
      {{- if $v.valuesRepo }}
        valueFiles:
        {{- toYaml  $v.valueFiles | nindent 8 }}
    - repoURL: {{ $v.valuesRepo }}
      targetRevision: {{ $v.valuesRevision | default "main" }}
      ref: {{ $name }}
    {{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
