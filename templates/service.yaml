{{- if or (.Values.argocd.wrapperAppOff) ( not .Values.subCharts ) }}
{{- range $msvc, $v := .Values.microservices}}
{{- with $ }}

{{- if $v }}
{{/* Variables */}}
{{- $serviceConfig := default dict $v.service }}
{{- $enabled := true }}
{{- if hasKey $serviceConfig "enabled" }}
  {{- if not $serviceConfig.enabled }}
    {{- $enabled = false }}
  {{- end }}
{{- end }}
{{ if and $enabled (not (empty $v)) (not $v.containers) (not $v.cronjob) (not $v.job) (ne $v.enabled false) }}

{{- $type := (($v.service).type) | default .Values.defaults.service.type }}
{{- $headless := (($v.service).headless) | default .Values.defaults.service.headless }}
{{- $port := (($v.service).port) | default .Values.defaults.service.port }}
{{- $targetPort := (($v.service).targetPort) | default .Values.defaults.service.targetPort }}
{{- $name := (($v.service).name) | default .Values.defaults.service.name }}
{{- $disablePortName := (($v.service).disablePortName) | default .Values.defaults.service.disablePortName }}
{{- $appProtocol := (($v.service).appProtocol) | default .Values.defaults.service.appProtocol }}
{{- $additionalPorts := (($v.service).additionalPorts) | default .Values.defaults.service.additionalPorts }}
{{- $appLabel := $v.appLabel | default $msvc }}
{{- $selectorLabels := $v.selectorLabels }}
{{- $sessionAffinity := (($v.service).sessionAffinity) }}
{{- $overrideName := (($v.service).overrideName) | default $msvc }}
{{- $namespace := $v.namespace | default .Release.Namespace }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ $overrideName }}
  namespace: {{ $namespace }}
  labels:
    app: {{ $appLabel }}
    {{- include "universal-app-chart.selectorLabels" . | nindent 4 }}
    {{- include "universal-app-chart.istioLabels" . | nindent 4 }}
spec:
  type: {{ $type }}
{{- if $headless }}
  clusterIP: None
{{- end }}
  ports:
    - port: {{ $port }}
      targetPort: {{ $targetPort }}
      {{- if (($v.service).appProtocol) }}
      appProtocol: {{ $appProtocol }}
      {{- else }}
      protocol: TCP
      {{- end }}
      {{- if $disablePortName }}
      {{- else}}
      name: {{ $name }}
      {{- end }}
{{- if $additionalPorts }}
{{ toYaml $additionalPorts | indent 4 }}
{{- end }}
{{- if $sessionAffinity }}
  sessionAffinity: {{ toYaml $sessionAffinity }}
{{- end }}
  selector:
    app: {{ $appLabel }}
    {{- include "universal-app-chart.istioLabels" . | nindent 4 }}
    {{- if $selectorLabels -}} {{- toYaml $selectorLabels | nindent 4 }} {{- end }}
{{- end }}
{{- if and $enabled $v.containers }}
      {{- range $containerName, $container := $v.containers }}
        {{- with $container }}
          {{/* CONTAINER Variables */}}
          {{- $enabled := (($container.service).enabled) | default $.Values.defaults.service.enabled }}
          {{- $type := (($container.service).type) | default $.Values.defaults.service.type }}
          {{- $port := (($container.service).port) | default $.Values.defaults.service.port }}
          {{- $targetPort := (($container.service).targetPort) | default $.Values.defaults.service.targetPort }}
          {{- $name := (($container.service).name) | default $.Values.defaults.service.name }}
          {{- $disablePortName := (($v.service).disablePortName) | default $.Values.defaults.service.disablePortName }}
          {{- $appProtocol := (($container.service).appProtocol) | default $.Values.defaults.service.appProtocol }}
          {{- $additionalPorts := (($container.service).additionalPorts) | default $.Values.defaults.service.additionalPorts }}
          {{- $selectorLabels := $container.selectorLabels }}
          {{- $sessionAffinity := (($container.service).sessionAffinity) }}
          {{- $headless := (($container.service).headless) | default $.Values.defaults.service.headless }}
          {{- $overrideName := (($container.service).overrideName) | default $.Values.defaults.service.overrideName }}
          {{- $namespace := $v.namespace | default $.Release.Namespace }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ default (printf "%s-%s" $msvc $containerName) $overrideName }}
  namespace: {{ $namespace }}
  labels:
    app: {{ $containerName }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    authentication: istio-auth
    app.kubernetes.io/name: {{ printf "%s-%s" $.Release.Name $.Chart.Name | trunc 63 | trimSuffix "-" }}
spec:
  type: {{ $type }}
{{- if $headless }}
  clusterIP: None
{{- end }}
  ports:
    - port: {{ $port }}
      targetPort: {{ $targetPort }}
      {{- if (($v.service).appProtocol) }}
      appProtocol: {{ $appProtocol }}
      {{- else }}
      protocol: TCP
      {{- end }}
      {{- if $disablePortName }}
      {{- else}}
      name: {{ $name }}
      {{- end }}
{{- if $additionalPorts }}
{{ toYaml $additionalPorts | indent 4 }}
{{- end }}
{{- if $sessionAffinity }}
  sessionAffinity: {{ toYaml $sessionAffinity }}
{{- end }}
  selector:
    app: {{ $containerName }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    authentication: istio-auth
    app.kubernetes.io/name: {{ printf "%s-%s" $.Release.Name $.Chart.Name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
