{{/* Variables */}}
{{/*For generating secrets for DBs redis or minio-standalone */}}


{{- if .Values.generatedSecrets.enabled }}

{{- if .Values.microservices }}
{{- if ne .Release.Namespace "argocd" }}
{{- $jobEnabled := false }}
{{- range $key, $value := .Values.microservices }}
  {{- if and $value (or (hasKey $value "job") (hasKey $value "cronjob")) }}
    {{- $jobEnabled = true }}
  {{- end }}
{{- end }}
{{- if not $jobEnabled }}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: generated-secrets
  namespace: {{ .Release.Namespace }}
  annotations:
    "argocd.argoproj.io/sync-options": "Prune=false"
    "argocd.argoproj.io/compare-options": "IgnoreExtraneous"
  labels:
{{ include "universal-app-chart.labels" . | indent 4 }}
stringData:
  GENERATED_DB_PASSWORD: {{ randAlphaNum 32 }}
  GENERATED_ADMIN_PASSWORD: {{ randAlphaNum 32 }}
  GENERATED_DB_RW_PASSWORD: {{ randAlphaNum 32 }}
  GENERATED_DB_RO_PASSWORD: {{ randAlphaNum 32 }}
  admin-password: {{ randAlphaNum 32 }}
  repmgr-password: {{ randAlphaNum 32 }}
  password: {{ randAlphaNum 32 }}
  GENERATED_REDIS_PASSWORD: {{ randAlphaNum 32 }}
  GENERATED_MINIO_SECRET_KEY: {{ randAlphaNum 32 }}
  MINIO_APP_ACCESS_KEY: {{ randAlphaNum 32 }}
  MINIO_APP_SECRET_KEY: {{ randAlphaNum 32 }}
  mongodb-passwords: {{ randAlphaNum 32 }}
  mongodb-root-password: {{ randAlphaNum 32 }}
  mongodb-metrics-password: {{ randAlphaNum 32 }}
  mongodb-replica-set-key: {{ randAlphaNum 32 }}
{{- $USER := "gamewarden" }}
{{- $PASS := randAlphaNum 32 }}
  config.env: |-
    export MINIO_ROOT_USER={{ $USER | quote }}
    export MINIO_ROOT_PASSWORD={{ $PASS | quote }}
  accesskey: {{ $USER | quote }}
  secretkey: {{ $PASS | quote }}

{{- end }}
{{- end }}
{{- end }}
{{- end }}
