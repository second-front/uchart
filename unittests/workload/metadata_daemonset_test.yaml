---
# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: workload metadata daemonset
templates:
  - uchart.yaml
values:
  - ../_values/workloads_main_default_container.yaml
tests:
  - it: default metadata should pass
    set:
      workloads.main.type: daemonset
    asserts:
      - documentIndex: &workloadDoc 0
        isKind:
          of: DaemonSet
      - documentIndex: *workloadDoc
        notExists:
          path: metadata.annotations
      - documentIndex: *workloadDoc
        equal:
          path: metadata.labels
          value:
            app.kubernetes.io/component: main
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: RELEASE-NAME
            app.gamewarden.io/customer: test
            app.gamewarden.io/environment: dev
            app.gamewarden.io/complianceLevel: il2
            argocd.argoproj.io/instance: RELEASE-NAME
            helm.sh/chart: uchart-2.0.0

  - it: custom metadata should pass
    set:
      workloads:
        main:
          type: daemonset
          annotations:
            test_annotation: test
          labels:
            test_label: test
    asserts:
      - documentIndex: &workloadDoc 0
        isKind:
          of: DaemonSet
      - documentIndex: *workloadDoc
        equal:
          path: metadata.annotations
          value:
            test_annotation: test
      - documentIndex: *workloadDoc
        equal:
          path: metadata.labels
          value:
            app.kubernetes.io/component: main
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: RELEASE-NAME
            app.gamewarden.io/customer: test
            app.gamewarden.io/environment: dev
            app.gamewarden.io/complianceLevel: il2
            argocd.argoproj.io/instance: RELEASE-NAME
            helm.sh/chart: uchart-2.0.0
            test_label: test

  - it: custom metadata with global metadata should pass
    set:
      global:
        labels:
          global_label: test
        annotations:
          global_annotation: test
      workloads:
        main:
          type: daemonset
          annotations:
            test_annotation: test
          labels:
            test_label: test
    asserts:
      - documentIndex: &workloadDoc 0
        isKind:
          of: DaemonSet
      - documentIndex: *workloadDoc
        equal:
          path: metadata.annotations
          value:
            global_annotation: test
            test_annotation: test
      - documentIndex: *workloadDoc
        equal:
          path: metadata.labels
          value:
            app.kubernetes.io/component: main
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: RELEASE-NAME
            app.gamewarden.io/customer: test
            app.gamewarden.io/environment: dev
            app.gamewarden.io/complianceLevel: il2
            argocd.argoproj.io/instance: RELEASE-NAME
            helm.sh/chart: uchart-2.0.0
            global_label: test
            test_label: test
